networks:
  bots: {}

services:
  bot:
    networks: [bots]
    container_name: germ-bot
    links: [db, jaeger]
    build: .
    volumes:
      - ./:/src
    environment: &local-dev
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      DB_HOST: germ-db
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    working_dir: /src
    command: [
      "opentelemetry-instrument",
      "--service_name=germ-bot",
      "--metrics_exporter=none",
      # https://www.jaegertracing.io/docs/1.58/spm/#architecture
      "--exporter_otlp_insecure=true",
      "--exporter_otlp_endpoint=http://germ-otel-collector:4318",
      "--exporter_otlp_protocol=http/protobuf",
      "gunicorn", "-c", "bot/gunicorn_config.py", "bot.main:bot", "--bind", "0.0.0.0:8000"
    ]
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD", "curl", "-s", "localhost:8000/healthz"]
      interval: 10s
      timeout: 9s
      retries: 6

  db:
    networks: [bots]
    container_name: germ-db
    image: postgres:16
    environment:
      POSTGRES_DB: germ
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5432"]
      interval: 10s
      timeout: 9s
      retries: 6

  # See: https://www.jaegertracing.io/docs/1.58/spm/#architecture
  jaeger:
    networks: [bots]
    container_name: germ-jaeger
    links: [prometheus]
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_OTLP_GRPC_PORT=4317
      - COLLECTOR_OTLP_METRICS_ENABLED=true
      - LOG_LEVEL=warn
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://germ-prometheus:9090
      - PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=true
      - PROMETHEUS_QUERY_NAMESPACE=${PROMETHEUS_QUERY_NAMESPACE:-}
      - PROMETHEUS_QUERY_DURATION_UNIT=${PROMETHEUS_QUERY_DURATION_UNIT:-}
      - PROMETHEUS_QUERY_NORMALIZE_CALLS=true
      - PROMETHEUS_QUERY_NORMALIZE_DURATION=true
    ports:
      - "16686:16686" # UI
      - "4317:4317" # OTLP over gRPC
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4317"]
      interval: 10s
      timeout: 9s
      retries: 6

  # See: https://www.jaegertracing.io/docs/1.58/spm/#architecture
  prometheus:
    networks: [bots]
    container_name: germ-prometheus
    links: [otel-collector]
    image: prom/prometheus:v2.52.0
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --log.level=warn
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9090"]
      interval: 10s
      timeout: 9s
      retries: 6

  # See: https://www.jaegertracing.io/docs/1.58/spm/#architecture
  otel-collector:
    networks: [bots]
    container_name: germ-otel-collector
    image: otel/opentelemetry-collector-contrib:0.102.0
    volumes:
      - ./observability/otel-collector-config-connector.yml:/etc/otelcol/otel-collector-config.yml
    ports:
      - "4318:4318" # OTLP over HTTP
    command:
      - --config=/etc/otelcol/otel-collector-config.yml

  test:
    networks: [bots]
    container_name: germ-test
    links: [db, bot]
    build: .
    volumes:
      - ./:/src
    environment: *local-dev
    working_dir: /src
    command: ["pytest", "tests"]
An IP address might look like this: 192.168.1.10.
A subnet mask is also a 32-bit number that masks an IP address and divides it into the network and host portions.
A common subnet mask is 255.255.255.0.
The first 24 bits (the ones represented by 255.255.255) are used for the network.
The last 8 bits (the ones represented by 0) are used for the host.
The number of available host addresses is calculated as (2^{(32 - \text{number of bits in subnet mask})} - 2).
In this case, (2^{(32 - 24)} - 2 = 2^8 - 2 = 256 - 2 = 254) usable addresses (the subtraction accounts for the network and broadcast addresses).
"127.0.0.1" is the loopback IP address in the Internet Protocol (IP) suite.
The address "127.0.0.1" is often referred to as the loopback address.
The hostname "localhost" is typically mapped to the IP address "127.0.0.1".
Developers often use "127.0.0.1" for testing network applications without needing an external network connection.
"127.0.0.1" is an IPv4 address.
The entire range of addresses from "127.0.0.0" to "127.255.255.255" is reserved for loopback purposes.
In summary, "127.0.0.1" is a crucial part of networking, especially for local testing and development.
The notation "192.168.0.0/16" is an example of CIDR (Classless Inter-Domain Routing) notation, which is used to specify IP address ranges.
The "192.168.0.0" part is an IP address.
The "/16" indicates the subnet mask, which determines how many bits of the IP address are used for the network part and how many bits are used for the host part.
In this case, "/16" means that the first 16 bits of the IP address are used for the network portion, and the remaining bits are used for host addresses within that network.
With a /16 subnet mask, the network includes all IP addresses from 192.168.0.0 to 192.168.255.255.
This provides a total of 65,536 possible addresses (2^16), which includes network and broadcast addresses.
The 192.168.0.0/16 range is part of the private IP address space defined by the Internet Assigned Numbers Authority (IANA).
In summary, "192.168.0.0/16" defines a private network range that can accommodate a large number of devices, and it's commonly used in local area networks (LANs).
The notation "172.16.0.0/12" is a representation of an IP address and a subnet mask in CIDR (Classless Inter-Domain Routing) format.
The "172.16.0.0" part is an IP address.
The "/12" is the CIDR notation, which indicates the number of bits in the subnet mask that are set to 1.
The /12 corresponds to a subnet mask of 255.240.0.0.
This is derived by converting the first 12 bits to 1s (11111111.11110000.00000000.00000000 in binary) and the rest to 0s.
The "172.16.0.0/12" block includes all IP addresses from 172.16.0.0 to 172.31.255.255.
This is because the /12 subnet mask allows for 20 bits of host addresses (32 total bits minus 12 network bits), which provides a total of 2^20 (1,048,576) possible addresses.
The 172.16.0.0/12 range is part of the private IP address space defined by RFC 1918.
In summary, "172.16.0.0/12" is a block of private IP addresses used for internal networking, allowing for over a million unique addresses within that range.
The notation "10.0.0.0/8" is a representation of an IP address and its associated subnet mask in CIDR (Classless Inter-Domain Routing) notation.
"10.0.0.0" is an IP address.
Only 192.168.x.x is.
Local IP addresses like 192.168.1.1 are used within your home network to identify devices.
192.168.x.x and 10.x.x.x are common ranges for these private addresses.
Iirc private blocks need to be 192.168.x.x, 10.x.x.x, or 172.16-31.x.x.
An IP block can be something like all IP addresses in the form of 123.x.x.x or something smaller like 123.1.2.x.
There are some special IP blocks like 192.168.x.x or 10.x.x.x which don't get assigned to organizations, but are reserved for use in internal networks.
Basically an Internet provider tells other Internet providers, if you wanna send a message to 123.123.123.1 then send it to router 1235 in my network.
The entire 127.x.x.x address block is reserved for loopback, which seems like a colossal waste.
If Comcast has a big block (73.x.x.x for example), other companies know to send those requests to Comcast, who uses their internal servers to route the request to you.
Originally IANA – Reserved 1981-09. 0.0.0.0/8 reserved for self-identification.
255.255.255.255 is reserved for "limited broadcast" destination address.
The 9.0.0.0/8 range is owned by IBM except for 9.9.9.0/24, which is Quad9.
128.0.0.0 is the start address of formerly "Class B".
169.254.0.0/16 (169.254.0.0–169.254.255.255) has been reserved for link-local addressing (RFC 6890).
172.16.0.0/12 (172.16.0.0–172.31.255.255) is reserved for private networks (RFC 1918).
192.0.2.0/24 is reserved for TEST-NET-1 (RFC 5737).
192.88.99.0/24 is reserved for 6to4 Relay Anycast (RFC 3068).
Well, for the private ranges you really only have 6 numbers to remember: 10.x.x.x the entire 10 range is private, 172.16.x.x-172.31.x.x, and then the 192.168.x.x… so 10,172,16-31,192,168.
The "/8" indicates the subnet mask.
Here, "/8" means that the first 8 bits of the IP address are used to identify the network, while the remaining bits (in this case, 24 bits) can be used for host addresses within that network.
With a /8 subnet mask, the network can accommodate a large number of hosts.
Specifically, it allows for (2^{24} - 2) usable IP addresses (the subtraction accounts for the network and broadcast addresses), which equals 16,777,214 usable addresses.
The IP address "10.0.0.0" is part of the private IP address range defined by RFC 1918.
In summary, "10.0.0.0/8" defines a private network with a large number of possible IP addresses for devices within that network.
192.168.0.0/16 (192.168.0.0–192.168.255.255) is reserved for private networks (RFC 1918).
192.0.0.0/24 is reserved for IANA IPv4 Special Purpose Address Registry (RFC 5736).
192.0.0.0 is the start address of formerly "Class C".
198.18.0.0/15 is reserved for Network Interconnect Device Benchmark Testing (RFC 6890).
198.51.100.0/24 is reserved for TEST-NET-2 (RFC 5737).
So like with 192.168.1.23 or something, if I were to say that 255.255.255.0 is the subnet mask, then so long as the first three octets (the segments divded by dots) don't change, all of those 192.168.1.x addresses will be the same.
We could also say 192.168.1.0/24, which is the CIDR notation.
So like 192.168.1.23, 192.168.1.44, etc etc are all on the same 192.168.1.0/24 subnet.
192.168.0.0/16, 10.0.0.0/8 and 172.16.0.0/12 are what are called "private address space".
When a computer on the inside of your network (i.e. on a 192.168 or 10. or 172.16. type network) needs to communicate across the public internet, the router performs a process called network address translation (NAT) that lets the communication leave the network, and gives a clear return path for any reply from the remote host you're connecting to.
So in your example, 192.168.12.46 would be represented as:
Converting this back to decimal is 32, so the subnet for a 28 bit netmask is 192.168.12.32, which is usually written in CIDR form as 192.168.12.32/28.
If the netmask was 255.255.255.0 then the whole of the last number would be masked off and the subnet would be 192.168.12.0/24.
How am I supposed to figure out that 255.255.255.240 is a 28-bit mask in binary?
In the same vein, if the IP address is 192.168.12.46, how would I figure out that with a 28-bit mask, the router is on subnet 192.168.12.32?
If the router is on 192.168.12.32 and it's a /28 with an IP address of 192.168.12.46 in it, then something doesn't add up, in standard masked subnetting any way.
The "dotted decimal notation", ie 192.168.20.1 is only for human convenience and is a binary to decimal conversion of the 32 bits, in 8 bit sections.
This also means that your ip address is 192.168.0.x with 255.255.255.255 as the netmask.
What are some of the possible subranges of a 10.0.0.0/8?
I'm reading a computer science book and I keep seeing this string, "10.0.0.0/8".
The IP address "10.0.0.0/8" can be subdivided into smaller subnets, allowing for various ranges.
For example, it can be divided into /9 subnets (e.g., 10.0.0.0/9 and 10.128.0.0/9), /10 subnets (e.g., 10.0.0.0/10 and 10.64.0.0/10), and further down to /16 subnets (e.g., 10.0.0.0/16, 10.1.0.0/16, etc.), each providing a different number of usable IP addresses.
These examples illustrate how the "10.0.0.0/8" network can be divided into various subnets, each with its own range of usable IP addresses, allowing for flexible network design and management.
Below, are a few more combinations of subranges within the "10.0.0.0/8" network.
The "10.0.0.0/8" network can be divided into various smaller subnets to suit different network needs.
For instance, a /14 subnet like "10.0.0.0/14" covers the range from 10.0.0.0 to 10.3.255.255, providing a large number of addresses for extensive networks.
A /16 subnet, such as "10.1.0.0/16," spans from 10.1.0.0 to 10.1.255.255, offering 65,536 addresses, which is suitable for medium-sized networks.
For smaller segments, a /24 subnet like "10.0.2.0/24" includes addresses from 10.0.2.0 to 10.0.2.255, ideal for smaller network segments or departments.
Finally, a /30 subnet, such as "10.0.0.0/30," provides just four addresses (10.0.0.0 to 10.0.0.3), often used for point-to-point links between routers.
The "172.16.0.0/12" network is part of the private IP address space and can be subdivided into various smaller subnets to accommodate different network requirements.
Starting with a /13 subnet, "172.16.0.0/13" covers the range from 172.16.0.0 to 172.23.255.255, providing a substantial number of addresses suitable for large organizational networks.
This subnet can support up to 524,288 IP addresses, making it ideal for extensive internal networks with numerous devices.
For a slightly smaller network, a /14 subnet like "172.16.0.0/14" spans from 172.16.0.0 to 172.19.255.255.
This range offers 262,144 addresses, which can be used for large departments or divisions within an organization, allowing for significant growth and flexibility.
A /16 subnet, such as "172.16.0.0/16," includes addresses from 172.16.0.0 to 172.16.255.255.
This provides 65,536 addresses, making it suitable for medium-sized networks, such as a campus or a large office building, where a moderate number of devices need to be connected.
This subnet offers 4,096 addresses, which is ideal for smaller departments or specific projects that require their own network space.
A /24 subnet, such as "172.16.1.0/24," provides a range from 172.16.1.0 to 172.16.1.255.
With 256 addresses, this is perfect for small office networks or individual departments within a larger organization, allowing for easy management and isolation of network traffic.
Finally, a /30 subnet, like "172.16.0.0/30," includes just four addresses (172.16.0.0 to 172.16.0.3), typically used for point-to-point links between network devices, such as routers.
For smaller network segments, a /20 subnet like "172.16.0.0/20" covers the range from 172.16.0.0 to 172.16.15.255.
These subdivisions of the "172.16.0.0/12" network allow for flexible and efficient IP address management, catering to a wide range of network sizes and configurations.
The "192.168.0.0/16" network is another segment of the private IP address space, widely used for local area networks (LANs).
This subnet encompasses a range from 192.168.0.0 to 192.168.255.255, providing a total of 65,536 IP addresses, making it suitable for a variety of applications, from home networks to larger organizational setups.
For smaller subdivisions, a /24 subnet like "192.168.1.0/24" covers the range from 192.168.1.0 to 192.168.1.255.
This subnet offers 256 addresses, which is ideal for small office networks or individual departments, allowing for straightforward management and organization of devices.
Another example is the /20 subnet "192.168.0.0/20," which spans from 192.168.0.0 to 192.168.15.255.
This range provides 4,096 addresses, making it suitable for medium-sized networks, such as a multi-floor office building or a small campus, where multiple devices need to be connected.
A /22 subnet, such as "192.168.4.0/22," includes addresses from 192.168.4.0 to 192.168.7.255.
This subnet allows for 1,024 addresses, which can accommodate a larger department or a specific project team that requires a dedicated network space.
For even smaller segments, a /30 subnet like "192.168.0.0/30" provides just four addresses (192.168.0.0 to 192.168.0.3).
Additionally, a /26 subnet, such as "192.168.1.0/26," covers the range from 192.168.1.0 to 192.168.1.63.
Overall, the "192.168.0.0/16" network and its various subnets provide a flexible framework for managing IP addresses in both home and business environments, accommodating a wide range of network sizes and configurations.
Now, do the same for 192.168.0.0/16!
For example, consider a network with the IP address range of "192.168.1.0/24."
In this scenario, devices can have IP addresses ranging from 192.168.1.1 to 192.168.1.254.
Imagine that Computer A is assigned the IP address 192.168.1.10, and Computer B is also manually configured to use the same IP address, 192.168.1.10.
As a result, when a packet is sent to 192.168.1.10, the network cannot determine which computer should receive it.
For example, if a device tries to ping 192.168.1.10, it may receive responses from both Computer A and Computer B, making it difficult to determine which computer is actually responding.
For instance, if Computer A is downloading a file from a server, and the server sends data to 192.168.1.10, Computer B may receive that data instead, resulting in data loss or corruption.
When a device, such as a computer with the IP address 192.168.1.10, wants to send data to another device, it first creates an IP packet.
This packet contains several key components, including the source IP address (192.168.1.10), the destination IP address (for example, 192.168.1.20), and the actual data being transmitted.
For instance, the packet header for a message from 192.168.1.10 to 192.168.1.20 would look something like this:
The router, which has its own IP address (e.g., 192.168.1.1), examines the destination IP address in the packet header.
If the destination IP (192.168.1.20) is on the same local network, the router forwards the packet directly to that address.
For example, if the packet needs to go from 192.168.1.10 to a device with the IP address 10.0.0.5, it might pass through several routers, each with its own IP address, such as 192.168.1.1, 172.16.0.1, and finally reaching a router with an external IP address that connects to the destination network.
Once the packet arrives at the destination network, the final router forwards it to the intended device with the IP address 192.168.1.20.
In many cases, especially with TCP (Transmission Control Protocol), the receiving device (192.168.1.20) will send an acknowledgment back to the sender (192.168.1.10) to confirm that the packet was received successfully.
For example, if the original packet from 192.168.1.10 to 192.168.1.20 is 2000 bytes and the maximum transmission unit (MTU) is 1500 bytes, it will be split into two packets, each with the same destination address.
Let’s say a computer with the IP address 192.168.1.10 wants to connect to a server with the IP address 203.0.1.5.
The client (192.168.1.10) sends a TCP segment with the SYN (synchronize) flag set to the server (203.0.3.9).
This segment includes a randomly generated initial sequence number (let’s say 1000) and indicates the client wants to establish a connection.
This segment acknowledges the client’s request by including the client’s sequence number (1000) plus one (1001) and also includes its own initial sequence number (let’s say 2000).
Finally, the client sends an ACK segment back to the server, acknowledging the server’s sequence number (2000) plus one (2001).
The client (192.168.1.10) wants to send a file to the server (2.0.1.1).
The first segment might have a sequence number of 1001 (the next number after the initial sequence) and contains a portion of the file.
The client (192.168.1.10) sends a TCP segment with the FIN (finish) flag set to indicate it wants to close the connection.
If the server has a window size of 3, the client can send three segments (1001, 1002, and 1003) before waiting for an acknowledgment.
IPv4 uses 32-bit addresses, allowing for approximately 4.3 billion unique addresses, while IPv6 uses 128-bit addresses, vastly expanding the address space to accommodate the growing number of devices connected to the internet.
This message is sent to the special address 255.255.255.255, which means "all hosts on the local network."
A DHCP server responds with an offer that includes the IP address 192.168.1.10, subnet mask 255.255.255.0, and a lease time of 24 hours.
The laptop selects the offer from the DHCP server and sends a DHCP Request message back to the server, indicating it wants to use the IP address 192.168.1.10.
The DHCP server sends an ACK message to the laptop, confirming that it can use the IP address 192.168.1.10, along with the default gateway 192.168.1.1 and DNS server 8.8.8.8.
Before the lease on 192.168.1.10 expires, the laptop sends a request to renew the lease, and the server responds with an ACK, extending the lease for another 24 hours.
Devices within a local network are assigned private IP addresses (e.g., 192.168.1.2, 192.168.1.3, etc.).
The local network is connected to the internet through a router that has a public IP address (e.g., 3.0.3.2).
A packet from 192.168.1.2:12345 is translated to 3.0.113.5:54321.
A response to 3.0.3.5:54321 is translated back to 192.168.1.2:12345.
If Device A only knows Device B's IP address (for example, 192.168.1.10), it will broadcast an ARP request to the network.
The sender's IP address is 192.168.1.5.
Who is at 192.168.8.36?
Are you logged in at 13.0.113.45?
I'm logged in on 198.51.100.99.
I can't ping 8.8.8.8.
I can't ping 4.4.4.4.
You can't ssh to 93.184.216.34.
Run a traceroute to 123.45.67.89.
My traceroute to 1.8.67.89 is completely hanging.
Do a host on 172.217.16.78.
Do a dig on 192.88.99.1.
I'm doing a tcpdump on 10.0.4.4.
I see packet loss at 10.0.1.1.
The NIC on 10.0.2.2 is totally saturated.
Are you sure 98.51.100.100 is still down?
The latency from 10.0.0.5 is through the roof.
There is definitely TCP retx happening at 10.1.1.9.
When a retransmit happens at 192.168.0.10, whatever the client is has to send the packet again.
We need to check why 10.10.10.10 is showing higher CPU usage than the other nodes.
192.168.1.100 is in a totally different subnet!
When you connect to a VPN, your device (let's say it has an IP address of 192.168.1.10) establishes a connection to a VPN server.
This server has its own public IP address (for example, 202.3.112.5).
The data travels from your IP address (192.168.1.10) to the VPN server's IP address (200.0.98.5).
The website sees the IP address of the VPN server (103.7.13.5) instead of your original IP address (192.168.1.10).
The encrypted data is sent to the VPN server (20.0.13.5).
The VPN server decrypts the data and forwards it to the website (198.51.100.25).
When testing network applications locally, we use the loopback address 127.0.0.1 to ensure that the application can communicate with itself without needing an external network.
In the absence of a DHCP server, the system automatically assigns itself a link-local address from the range 169.254.0.0/16, allowing devices on the same local network to communicate.
To send a message to all devices on the local network, we can use the broadcast address 255.255.255.255, which ensures that every host receives the packet.
For internal networking, we often use private addresses such as 192.168.1.1, which are not routable on the public internet and help maintain network security.
When streaming video to multiple users, we utilize a multicast address like 224.0.0.1 to efficiently send the data to all subscribed clients without overloading the network.
When configuring a server to listen on all available interfaces, we specify the address 0.0.0.0, allowing it to accept connections from any IP address.
To route traffic to external networks, we set the default gateway to 192.168.1.1, which is the address of our router.
Certain IP addresses, such as 240.0.0.0 to 255.255.255.255, are reserved for future use and should not be assigned to any devices on the network.
In IPv6 configurations, we use the loopback address ::1 to test local applications, similar to how we use 127.0.0.1 in IPv4.
Devices on an IPv6 network automatically generate link-local addresses in the fe80::/10 range, allowing them to communicate with each other on the same local link without a global address.
The software version 1.2.3 could easily be misinterpreted as an IP address by a text parser, but it actually refers to the release version of the application.
The date 2023.04.15 might confuse a text parser into thinking it's an IP address, but it simply represents April 15, 2023, in a non-standard format.
The file path /usr/local/bin/10.0.0.1 could be misread as an IP address, but it actually points to a directory in the Linux file system.
In our Git repository, the tag v1.0.0 might be mistaken for an IP address, but it denotes a specific version of the codebase.
The coordinates 37.7749.122.4194 might confuse a text parser into thinking it's an IP address, but it actually represents the latitude and longitude of San Francisco.
The serial number SN-123.456.789 could be mistaken for an IP address, but it is simply a unique identifier for the product.
The branch name feature/1.2.3 might be misread as an IP address, but it actually refers to a specific feature version in our version control system.
The timestamp 2023.03.15.12.30 could be misinterpreted as an IP address, but it represents March 15, 2023, at 12:30 PM.
The DNS resolution process begins when a user types in a domain, leading to queries that ultimately resolve to addresses like 23.0.113.5.
When troubleshooting connectivity issues, checking the DNS server at 8.8.8.8 can help determine if the problem lies with name resolution.
To enhance security, many companies implement DNS filtering, which can block access to known malicious addresses such as 185.220.101.2.
The IP address 8.8.8.8 is one of Google's public DNS servers, widely used for its reliability and speed in resolving domain names.
When configuring a DNS server, you might encounter the IP address 1.1.1.1, which belongs to Cloudflare and is known for its privacy-focused DNS services.
192.168.1.1 is commonly used as a default gateway in local networks, but it plays no direct role in public DNS resolution.
127.0.0.1 is known as the loopback address and is used for testing and troubleshooting DNS configurations on a local machine.
The IP address 198.41.0.4 is one of the root DNS servers, playing a crucial role in the global DNS hierarchy by directing queries to the appropriate top-level domain servers.
The IP 224.0.0.251 is used for multicast DNS (mDNS), allowing devices on the same local network to resolve hostnames without a traditional DNS server.
In a common network setup, the gateway at 192.168.1.1 serves as the primary access point for devices within the local area network, facilitating communication with external networks.
The email originating from 192.0.2.34 was flagged for review, as it matched patterns associated with previous phishing attempts.
When using the corporate VPN, your actual IP address is hidden, and you appear to be browsing from the address 20.0.11.90.
Our DDoS protection system detected an unusual surge in traffic from 198.51.100.22 and automatically initiated countermeasures.
During the incident investigation, we found that the IP address 23.0.13.7 was repeatedly attempting to access a restricted endpoint, which contributed to the service disruption.
The firewall has blocked access to both 192.168.1.10 and 192.168.1.20 due to suspicious activity.
After the security review, the administrator unblocked both 10.1.1.5 and 10.1.1.6, allowing them to communicate freely again.
The network administrator discovered that traffic to both 172.16.0.10 and 172.16.0.20 had been blackholed due to a misconfiguration in the routing table.
Due to a typo in the configuration, requests to 192.168.2.15 and 192.168.2.30 were incorrectly routed, causing connectivity issues.
The security team implemented endpoint protection on both 10.0.0.50 and 10.0.0.60 to safeguard against potential malware threats.
The network engineer discovered a routing issue between 192.168.1.1 and 192.168.1.2, which was causing intermittent connectivity problems for users.
The security team began scanning both 10.1.1.10 and 10.1.1.20 for vulnerabilities after detecting unusual traffic patterns.
The investigation revealed that the malware was hiding in the systems at 172.16.0.5 and 172.16.0.10, making it difficult to detect and remove.
The network administrator discovered that unauthorized sniffing was occurring on the connections between 192.168.2.15 and 192.168.2.30, compromising sensitive data.
DNS (Domain Name System) resolution is the process of translating human-friendly domain names (like www.example.com) into IP addresses (like 93.184.216.34) that computers use to identify each other on the network.
This is typically provided by your Internet Service Provider (ISP) or a third-party DNS service like Google Public DNS (8.8.8.8) or Cloudflare (1.1.1.1).
The resolver queries the authoritative name server for example.com, which might return something like 93.184.216.34.
CIDR notation specifies an IP address followed by a slash and a number (e.g., 192.168.1.0/24), where the number indicates the number of bits in the subnet mask.
If your CIDR range is 10.0.0.0/8, then you must have a total of 16,777,216 IP addresses.
In a subnet with an address range of 192.168.1.0/24, the .0 address (192.168.1.0) is the network address.
For 10.10.0.0/22, instead of having 10.10.0.1 or 10.10.3.254 as the default gateway like a normal person would, he’d use 10.10.0.254.
I once worked for a place that had the gateway 10.0.0.8 for "security".
Make your /24 172.17.2.0/24 so you can do 172.17.2.172 as your gateway.
Now you have a network such as 10.0.0.0-10.0.1.255.
The network would be 10.0.0.0, the broadcast as 10.0.1.255, and the gateway can be anywhere between 10.0.0.1-10.0.1.254.
Using 10.0.1.0 is a legit address within this subnet.
Oh, 0.0.0.0/0 is special.
0.0.0.0/0 is a destination network ("everything").
To use my analogy above, the 0.0.0.0/0 is everyone else outside of that room, and the default gateway is still the doorman.
Your statements are only correct for a /24 network (mask 255.255.255.0).
If your network is 10.1.0.0/23, 10.1.0.255 & 10.1.1.0 are both valid addresses.